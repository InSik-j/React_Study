// 배열 메서드 3. 배열 변형

// 5가지의 배열 변형 메서드

    // 1. filter
    // - 기존 배열에서 조건을 만족하는 요소들만 필터링하여 배열로 반환

    let arr1 = [
        {name: "홍길동", hobby:"테니스"},
        {name: "이순신", hobby:"테니스"},
        {name: "김연아", hobby:"탁구"},
    ];

    const tennisPeople = arr.filter((item)=>{
        if(poppedItem.hobby === "테니스") return true;
        
    });
        // 결과 -> tennisPeople = [
                //                  {name: "홍길동", hobby:"테니스"},
                //                  {name: "이순신", hobby:"테니스"},
                //                ]

// -----------------------------------------------------------------------
    
    // 2. map
    // - 배열의 모든 요소를 순회하면서, 
    //   각각 콜백함수를 실행하고 그 결과값들을 모아서 새로운 배열로 반환
    let arr2 = [1, 2, 3];
    const mapResult = arr2.map((item, idx, arr) => {
        return item * 2; 
    });
    // 결과 -> mapResult = [2, 4, 6]
    
    //  map을 실용적으로 이용한 예제
        // - arr1의 name 프로퍼티의 값을 추출하여 새로운 배열에 저장
        let names = arr1.map((item)=>item.name);
        // 결과 -> names = [ '홍길동', '이순신', '김연아']

// -----------------------------------------------------------------------

    // 3. sort
    // - 배열을 사전순으로 정렬하는 메서드
    // * 단, 배열에 문자열이 아닌 다른 값이 있다면 정렬 x 
    // * 숫자를 정렬하고 싶다면 콜백함수를 추가해서 정렬
    let arr3 = ["c", "a", "b"];
    arr.sort();
    // 결과 -> arr3 = ["a", "b", "c"]

// -----------------------------------------------------------------------

    // 4. toSorted
    // - 정렬된 새로운 배열을 반환하는 메서드
    // * 원본 배열의 값은 변경되지 않음
    let arr4 = ["c", "a", "b"];
    const sorted = arr4.toSorted();

    // 결과 ->  arr4 = ["c", "a", "b"]
    //        sorted = ["a", "b", "c"]

// -----------------------------------------------------------------------
    // 5. join
    // - 배열의 모든 요소를 하나의 문자열로 합쳐서 반환하는 메서드
    // * join()에 값을 넣어 구분자 변경 가능
    let arr6 = ["my", "name", "is", "GilDong", ];
    const joined = arr6.join();
    // 결과 -> joined = "my, name, is, GilDong"